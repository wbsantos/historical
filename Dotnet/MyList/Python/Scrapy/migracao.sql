----------------------------------------------


USE SPIDER
INSERT INTO MYLIST..CATEGORIA (CTCATEGORIA, CTPAI) 
SELECT DISTINCT NAME AS CTCATEGORIA, 1 AS CTPAI FROM ANBIENTGENRE 

SELECT DISTINCT CATEGORY FROM ANBIENTANIME A WHERE EPISODES IS NULL

----------------------------------------------

DECLARE @I INT
DECLARE @TOTAL INT
SELECT @I = MIN(ID), @TOTAL = MAX(ID) FROM ANBIENTANIME

WHILE @I <= @TOTAL
BEGIN
	DECLARE @TITULO VARCHAR(140)
	DECLARE @SINOPSE VARCHAR(1400)
	DECLARE @IMG VARCHAR(240)
	DECLARE @MYANIMELIST VARCHAR(240)
	DECLARE @ANOINI INT
	DECLARE @ANOFIM INT
	DECLARE @EPISODIOSTOTAIS INT
	DECLARE @CATEGORIA VARCHAR(140)
	DECLARE @EPISODIOS VARCHAR(15)
	DECLARE @NEWID INT
	DECLARE @ANO VARCHAR(15)
	DECLARE @CATID INT
	DECLARE @ITEMID INT
	
	IF(NOT EXISTS(SELECT 1 FROM ANBIENTANIME WHERE ID = @I))
	BEGIN
		SET @I = @I + 1
		CONTINUE
	END

	SELECT 
		@TITULO = TITLE, 
		@SINOPSE = SYNOPSIS,
		@EPISODIOS = EPISODES,
		@ANO = YEAR,
		@IMG = IMGURL,
		@MYANIMELIST = MYANIMELISTURL,
		@CATEGORIA = CATEGORY
	FROM ANBIENTANIME WHERE ID = @I
	
	SET @ANO = REPLACE(@ANO, ' ', '')
	SET @ANO = REPLACE(@ANO, 'a', '/')
	SET @ANO = REPLACE(@ANO, '?', '')
	IF(@ANO IS NULL)
	BEGIN
		SET @ANOINI = NULL
		SET @ANOFIM = NULL
	END
	ELSE IF(LEN(@ANO) = 4)
	BEGIN
		SET @ANOINI = CONVERT(INT, @ANO)
		SET @ANOFIM = NULL
	END
	ELSE IF(CHARINDEX('/', @ANO) > 0)
	BEGIN
		SET @ANOINI = CONVERT(INT, SUBSTRING(@ANO, 1, CHARINDEX('/', @ANO) - 1))

		DECLARE @ATE VARCHAR(5)
		SET @ATE = SUBSTRING(@ANO, CHARINDEX('/', @ANO) + 1, 4)
		SET @ANOFIM = CASE WHEN LEN(@ATE) > 0 THEN @ATE ELSE NULL END
	END


	SET @EPISODIOS = REPLACE(@EPISODIOS, ' ', '')
	SET @EPISODIOS = REPLACE(@EPISODIOS, '?', '')
	IF(@EPISODIOS IS NULL)
	BEGIN
		SET @EPISODIOSTOTAIS = NULL
	END
	ELSE IF(CHARINDEX('/', @EPISODIOS) > 0)
	BEGIN
		SET @EPISODIOSTOTAIS = CONVERT(INT, CASE WHEN LEN(@EPISODIOS) = CHARINDEX('/', @EPISODIOS) THEN SUBSTRING(@EPISODIOS, 1, CHARINDEX('/', @EPISODIOS) - 1)
											ELSE SUBSTRING(@EPISODIOS, CHARINDEX('/', @EPISODIOS) + 1, 10) END)
	END
	ELSE
	BEGIN
		SET @EPISODIOSTOTAIS = CONVERT(INT, @EPISODIOS)
	END

	SET @CATID = CASE WHEN @CATEGORIA = 'Anime' then 1
					  WHEN @CATEGORIA = 'Filme' then 3
					  ELSE 4 END
	
	INSERT INTO MyList..ITEM (ITTITULO, ITSINOPSE) VALUES (@TITULO, @SINOPSE)
	SET @ITEMID = SCOPE_IDENTITY()

	INSERT INTO MyList..ITEM_CATEGORIA (ICITID, ICCTID) VALUES (@ITEMID, @CATID)
	INSERT INTO MyList..PROPRIEDADE (PRITID, PRVALOR, PRTIPO) VALUES (@ITEMID, @IMG, 1)
	INSERT INTO MyList..PROPRIEDADE (PRITID, PRVALOR, PRTIPO) VALUES (@ITEMID, @MYANIMELIST, 2)
	IF(@ANOINI IS NOT NULL)
		INSERT INTO MyList..PROPRIEDADE (PRITID, PRVALOR, PRTIPO) VALUES (@ITEMID, CONVERT(VARCHAR, @ANOINI), 3)
	IF(@ANOFIM IS NOT NULL)
		INSERT INTO MyList..PROPRIEDADE (PRITID, PRVALOR, PRTIPO) VALUES (@ITEMID, CONVERT(VARCHAR, @ANOFIM), 4)
	IF(@EPISODIOSTOTAIS IS NOT NULL)
		INSERT INTO MyList..PROPRIEDADE (PRITID, PRVALOR, PRTIPO) VALUES (@ITEMID, CONVERT(VARCHAR, @EPISODIOSTOTAIS), 5)
	
	UPDATE ANBIENTANIME SET ITEMID = @ITEMID WHERE ID = @I

	SET @I = @I + 1
END


USE MYLIST

USE MYLIST
SELECT * FROM ITEM 
INNER JOIN ITEM_CATEGORIA ON ICITID = ITID
WHERE
	ICCTID = 3 AND
	EXISTS(SELECT 1 FROM PROPRIEDADE WHERE PRITID = ITID AND PRTIPO = 4)

/*
01: Imagem Pôster
02: MyAnimeList URL
03: Ano de Publicação
04: Ano Fim
05: Episódios totais
*/

USE SPIDER
INSERT INTO MYLIST..SAGA (SGTITULO)
SELECT TITLE FROM ANBIENTANIME A WHERE
EXISTS (SELECT * FROM anbientrelateditems R WHERE R.idAnime = A.ID)





DECLARE @I INT
DECLARE @TOTAL INT
SELECT @I = MIN(ID), @TOTAL = MAX(ID) FROM anbientrelateditems

WHILE @I <= @TOTAL
BEGIN
	IF(NOT EXISTS(SELECT 1 FROM ANBIENTRELATEDITEMS WHERE ID = @I))
	BEGIN
		SET @I = @I + 1
		CONTINUE
	END

	DECLARE @IDITEM INT
	DECLARE @IDITEMRELATED INT
	DECLARE @IDSAGA INT

	SELECT  @IDITEM = A.ITEMID,
		   @IDITEMRELATED = A2.ITEMID
	FROM ANBIENTRELATEDITEMS R
	INNER JOIN ANBIENTANIME A ON A.ID = R.IDANIME
	INNER JOIN ANBIENTANIME A2 ON A2.ID = R.IDRELATED
	WHERE R.ID = @I

	IF(NOT EXISTS(SELECT 1 FROM MYLIST..ITEM_SAGA WHERE ISITID = @IDITEM) AND 
	   NOT EXISTS(SELECT 1 FROM MYLIST..ITEM_SAGA WHERE ISITID = @IDITEMRELATED))
	BEGIN
		INSERT INTO MYLIST..SAGA (SGTITULO) SELECT ITTITULO FROM MYLIST..ITEM WHERE ITID = @IDITEM
		SET @IDSAGA = SCOPE_IDENTITY()
	END
	ELSE
	BEGIN
		SELECT @IDSAGA = ISSGID FROM MYLIST..ITEM_SAGA WHERE ISITID = @IDITEM
		IF @IDSAGA IS NULL 
			SELECT @IDSAGA = ISSGID FROM MYLIST..ITEM_SAGA WHERE ISITID = @IDITEMRELATED
	END

	IF(NOT EXISTS(SELECT 1 FROM MYLIST..ITEM_SAGA WHERE ISITID = @IDITEM))
		INSERT INTO MYLIST..ITEM_SAGA (ISITID, ISSGID) VALUES (@IDITEM, @IDSAGA)
	IF(NOT EXISTS(SELECT 1 FROM MYLIST..ITEM_SAGA WHERE ISITID = @IDITEMRELATED))
		INSERT INTO MYLIST..ITEM_SAGA (ISITID, ISSGID) VALUES (@IDITEMRELATED, @IDSAGA)

	SET @I = @I + 1
END


USE MYLIST
SELECT DISTINCT ISSGID FROM ITEM_SAGA
SELECT * FROM ITEM_SAGA WHERE ITEMID IS NULL

SELECT DISTINCT R.IDANIME FROM SPIDER..anbientrelateditems  R
WHERE
NOT EXISTS (SELECT 1 FROM SPIDER..anbientrelateditems R2 WHERE R2.ID <> R.ID AND (R2.idRelated = R.idAnime OR R2.idAnime = R.idRelated))

SELECT * FROM SAGA
USE SPIDER
SELECT * FROM ANBIENTRELATEDITEMS
INSERT INTO ANBIENTRELATEDITEMS (IDANIME, urlRelated, idRelated) SELECT IDANIME, URLRELATED, IDRELATED FROM anbientrelateditems_150606


SELECT * FROM ITEM
INNER JOIN ITEM_SAGA ON ISITID = ITID
WHERE ISSGID = 315


